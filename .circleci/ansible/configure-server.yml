---

- name: "configuration play." 
  hosts: web
  user: ubuntu
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml
    - envvars:
        ENVIRONMENT: "production"
        TYPEORM_CONNECTION: "postgres"
        TYPEORM_ENTITIES: "./src/modules/domain/**/*.entity.ts"
        TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
        TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
        TYPEORM_USERNAME: "${TYPEORM_USERNAME}"
        TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
        TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"

  pre_tasks:
    - name: "wait 600 seconds for target connection to become reachable/usable."
      wait_for_connection:

    - name: "Write the new ec2 instance host key to known hosts"
      connection: local
      shell: "ssh-keyscan -H {{ inventory_hostname }} >> ~/.ssh/known_hosts"

    - name: "install python for Ansible."
      become: true
      raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3)
      changed_when: false

  roles:
    - configure-server

  environment:
    - "{{ envvars }}"

